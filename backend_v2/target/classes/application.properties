# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = app
quarkus.datasource.password = app
quarkus.datasource.jdbc.url = jdbc:postgresql://db:5432/db

# Auto-Commit ausschalten wegen LOBs
quarkus.datasource.jdbc.transactions=enabled
quarkus.datasource.jdbc.pooling-enabled=true
quarkus.datasource.jdbc.auto-commit=false

# drop and create the database at startup (use `update` to only update the schema)
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%prod.quarkus.hibernate-orm.database.generation=create

# Enable CORS for all origins, methods, and headers
quarkus.http.cors.enabled=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
quarkus.http.cors.headers=Accept,Authorization,Content-Type,Origin,X-Requested-With
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H

quarkus.http.limits.max-body-size=50M

quarkus.package.jar.type=uber-jar

<<<<<<< HEAD:backend_v2/target/classes/application.properties
<<<<<<< HEAD:backend_v2/target/classes/application.properties
=======
<<<<<<< HEAD
>>>>>>> main:backend_v2/src/main/resources/application.properties

=======
authentication.collection.id=oldpeople
authentication.dynamodb.table=facerecognition
authentication.fullName.key=FullName
authentication.rekognitionid.key=RekognitionId
<<<<<<< HEAD:backend_v2/target/classes/application.properties
>>>>>>> bfc662559ef0baa91b58eff2524a9c99fa6378f2:backend_v2/src/main/resources/application.properties
=======
>>>>>>> main
>>>>>>> main:backend_v2/src/main/resources/application.properties
