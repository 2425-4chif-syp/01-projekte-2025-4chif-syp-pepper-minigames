name: CI/CD Pipeline for Quarkus Docker Deployment

on:
  push:
    branches:
      - main
    paths:
      - '../../backend_v2/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          java-package: 'jdk'
          architecture: 'x64'
          check-latest: false
          overwrite-settings: true

      - name: Build with Maven
        run: |
          cd backend_v2
          mvn clean install -DskipTests

      - name: Build Docker image
        run: |
          cd backend_v2
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Deploy to VM (SSH)
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: 22
          script: |
            if [ $(docker ps -q -f name=backend) ]; then
              docker stop backend
              docker rm backend
            fi
            
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
          
            docker run -d \
              -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
              -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
              -e CHATGBT_API_KEY=${{ secrets.CHATGBT_API_KEY }} \
              --network postgres \
              --name backend \
              -p 8080:8080 \
              --restart always \
              ${{ secrets.DOCKER_USERNAME }}/backend:latest
